import XCTest
import XCTestExtensions

@testable import ActionBuilderCore

struct MockRepo: Repo {
    let owner = "testOwner"
    let name = "testRepo"
    let workflow = "Tests"
    var settings: ActionBuilderCore.Settings

    init(_ options: [String]) {
        settings = Settings(options: options)
    }
    
}

final class ActionBuilderCoreTests: XCTestCase {
    func testYAMLmacOSSwift56() {
        let expected = """
            # --------------------------------------------------------------------------------
            # This workflow was automatically generated by Test Generator 1.2.3 (456).
            # (see https://test.com for more details)
            # --------------------------------------------------------------------------------

            name: Tests

            on: [push, pull_request]

            jobs:
            
                macOS-swift56:
                    name: macOS (Swift 5.6)
                    env:
                        TOOLCHAINS: swift
                    runs-on: macos-11
                    steps:
                    - name: Checkout
                      uses: actions/checkout@v1
                    - name: Make Logs Directory
                      run: mkdir logs
                    - name: Install Toolchain
                      run: |
                        wget --quiet https://download.swift.org/swift-5.6.1-release/xcode/swift-5.6.1-RELEASE/swift-5.6.1-RELEASE-osx.pkg
                        sudo installer -pkg swift-5.6.1-RELEASE-osx.pkg -target /
                        ln -s "/Library/Developer/Toolchains/swift-5.6.1-RELEASE.xctoolchain/usr/bin" swift-latest
                        ls -d /Applications/Xcode*
                        sudo xcode-select -s /Applications/Xcode_13.2.1.app
                        swift --version
                    - name: Xcode Version
                      run: |
                        xcodebuild -version
                        xcrun swift --version
                    - name: Swift Version
                      run: swift --version
                    - name: Upload Logs
                      uses: actions/upload-artifact@v1
                      if: always()
                      with:
                        name: logs
                        path: logs
            
            """
        
        let generator = Generator(name: "Test Generator", version: "1.2.3 (456)", link: "https://test.com")
        let repo = MockRepo(["macOS", Compiler.Version.swift56.rawValue])
        
        let source = generator.workflow(for: repo)
        XCTAssertEqual(source, expected)
    }

    func testYAMLiOSSwift56() {
        let expected = """
            # --------------------------------------------------------------------------------
            # This workflow was automatically generated by Test Generator 1.2.3 (456).
            # (see https://test.com for more details)
            # --------------------------------------------------------------------------------
            
            name: Tests
            
            on: [push, pull_request]
            
            jobs:
            
                xcode-swift56:
                    name: iOS (Swift 5.6, Xcode 13.2.1)
                    env:
                        TOOLCHAINS: swift
                    runs-on: macos-11
                    steps:
                    - name: Checkout
                      uses: actions/checkout@v1
                    - name: Make Logs Directory
                      run: mkdir logs
                    - name: Install Toolchain
                      run: |
                        wget --quiet https://download.swift.org/swift-5.6.1-release/xcode/swift-5.6.1-RELEASE/swift-5.6.1-RELEASE-osx.pkg
                        sudo installer -pkg swift-5.6.1-RELEASE-osx.pkg -target /
                        ln -s "/Library/Developer/Toolchains/swift-5.6.1-RELEASE.xctoolchain/usr/bin" swift-latest
                        ls -d /Applications/Xcode*
                        sudo xcode-select -s /Applications/Xcode_13.2.1.app
                        swift --version
                    - name: Xcode Version
                      run: |
                        xcodebuild -version
                        xcrun swift --version
                    - name: XC Pretty
                      run: sudo gem install xcpretty-travis-formatter
                    - name: Detect Workspace & Scheme (iOS)
                      run: |
                        WORKSPACE="testRepo.xcworkspace"
                        if [[ ! -e "$WORKSPACE" ]]
                        then
                        WORKSPACE="."
                        GOTPACKAGE=$(xcodebuild -workspace . -list | (grep testRepo-Package || true))
                        if [[ $GOTPACKAGE != "" ]]
                        then
                        SCHEME="testRepo-Package"
                        else
                        SCHEME="testRepo"
                        fi
                        else
                        SCHEME="testRepo-iOS"
                        fi
                        echo "set -o pipefail; export PATH='swift-latest:$PATH'; WORKSPACE='$WORKSPACE'; SCHEME='$SCHEME'" > setup.sh
                    - name: Upload Logs
                      uses: actions/upload-artifact@v1
                      if: always()
                      with:
                        name: logs
                        path: logs

            
            """
        
        let generator = Generator(name: "Test Generator", version: "1.2.3 (456)", link: "https://test.com")
        let repo = MockRepo(["iOS", Compiler.Version.swift56.rawValue])
        
        let source = generator.workflow(for: repo)
        XCTAssertEqual(source, expected)
    }

}
